/* eslint-disable @typescript-eslint/no-empty-function */
import { Injectable, inject, signal } from '@angular/core';
import { Subject, mergeMap } from 'rxjs';
import { JSONCodec, JetstreamWsService, SubscribeType } from '@his-base/jetstream-ws';
import * as i0 from "@angular/core";
export class NewsService {
    constructor() {
        this.#url = 'ws://localhost:8080';
        /** 使用Signal變數儲存UserProfile型別的使用者資訊
         * @memberof NewsService
         */
        this.userProfile = signal({});
        this.news = signal({});
        this.allNormalNews = signal({});
        this.allTodoList = signal({});
        this.normalNews = signal({});
        this.toDoList = signal({});
        this.checkedNormalNews = signal({});
        this.checkedToDoList = signal({});
        /** 使用Subject變數自nats拿取包含最新消息的使用者資訊
         * @memberof NewsService
         */
        this.#userNews = new Subject();
        this.#jetStreamWsService = inject(JetstreamWsService);
    }
    #url;
    /** 使用Subject變數自nats拿取包含最新消息的使用者資訊
     * @memberof NewsService
     */
    #userNews;
    /** 使用ConsumerMessages訂閱最新消息
     * @memberof NewsService
     */
    #consumerMessages$;
    #jetStreamWsService;
    async connect() {
        await this.#jetStreamWsService.connect(this.#url);
        console.log("nats啟動");
    }
    async disconnect() {
        // 連線關閉前，會先將目前訂閱給排空
        await this.#jetStreamWsService.drain();
    }
    /** 更新最新消息
     * @param {News[]} news
     * @memberof NewsService
     */
    getNewsFromNats() {
        this.#jetStreamWsService.publish("news.wantNews", { code: "Neo", display: "Neo" });
    }
    setNews() {
        this.news.set(mockNews);
        this.allNormalNews.set(this.getFilterNews("10"));
        this.allTodoList.set(this.getFilterNews("60"));
        this.normalNews.set(this.filterStatus(this.allNormalNews(), "10"));
        this.toDoList.set(this.filterStatus(this.allTodoList(), "10"));
        this.checkedNormalNews.set(this.filterStatus(this.allNormalNews(), "60"));
        this.checkedToDoList.set(this.filterStatus(this.allTodoList(), "60"));
    }
    /** 依‘一般消息’、’待辦工作’分類最新消息
     * @param {Coding} type
     * @return {News[]}
     * @memberof NewsService
     */
    getFilterNews(code) {
        const newsList = this.news();
        if (code) {
            return this.news().filter(m => m.type['code'] == code);
        }
        else {
            return newsList;
        }
    }
    filterStatus(news, code) {
        if (code) {
            return news.filter(m => m.execStatus['code'] == code);
        }
        else {
            return news;
        }
    }
    filterOverdue(news) {
        const date = new Date;
        const aDay = 24 * 60 * 60 * 1000;
        return news.filter(m => date.valueOf() - m.execTime.valueOf() < aDay);
    }
    /** 訂閱最新消息
     * @memberof NewsService
     */
    async subNews() {
        this.#userNews = new Subject();
        const jsonCodec = JSONCodec();
        // 'news.getNews.dashboard'
        this.#consumerMessages$ = this.#jetStreamWsService.subscribe(SubscribeType.Push, 'news.getNews.dashboard');
        console.log("ready to subscribe");
        this.#consumerMessages$
            .pipe(mergeMap(async (messages) => {
            for await (const message of messages) {
                console.log('正在聽的subject： ', message.subject);
                this.#userNews.next(jsonCodec.decode(message.data));
                message.ack();
            }
        }))
            .subscribe(() => { });
        this.#userNews.subscribe((news) => {
            console.log("news", news);
            this.news.set(news);
            // this.normalNews.set(this.getFilterNews("10"))
            // this.toDoList.set(this.getFilterNews("60"))
            this.allNormalNews.set(this.getFilterNews("10"));
            this.allTodoList.set(this.getFilterNews("60"));
            this.normalNews.set(this.filterStatus(this.allNormalNews(), "10"));
            this.toDoList.set(this.filterStatus(this.allTodoList(), "10"));
            this.checkedNormalNews.set(this.filterOverdue(this.filterStatus(this.allNormalNews(), "60")));
            this.checkedToDoList.set(this.filterOverdue(this.filterStatus(this.allTodoList(), "60")));
            console.log("this.news()", this.news());
            console.log("this.normalNews()", this.normalNews());
            console.log("this.toDoListNews()", this.toDoList());
            console.log("this.checkedNormalNews()", this.checkedNormalNews());
            console.log("this.checkedToDoList()", this.checkedToDoList());
        });
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.6", ngImport: i0, type: NewsService, deps: [], target: i0.ɵɵFactoryTarget.Injectable }); }
    static { this.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: "12.0.0", version: "16.2.6", ngImport: i0, type: NewsService, providedIn: 'root' }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.6", ngImport: i0, type: NewsService, decorators: [{
            type: Injectable,
            args: [{
                    providedIn: 'root'
                }]
        }] });
export const mockNews = [
    {
        "_id": "64f1968af80caa4450a1d218",
        "appId": "001-app_id",
        "userCode": {
            "code": "Neo",
            "display": "Neo"
        },
        "subject": "員工健康檢查通知",
        "url": "https://www.hpc.tw",
        "sharedData": {},
        "period": {
            "start": new Date("1990-06-15T00:00"),
            "end": new Date("2229-12-31T23:59")
        },
        "type": {
            "code": "10",
            "display": "一般消息"
        },
        "execTime": new Date("2023-09-27T14:00"),
        "execStatus": {
            "code": "60",
            "display": "已讀/已完成"
        },
        "updatedBy": {
            "code": "alphaTeam",
            "display": "alphaTeam"
        },
        "updatedAt": new Date("1990-06-15T00:00")
    },
    {
        "_id": "64f1968af80caa4450a1d219",
        "appId": "002-app_id",
        "userCode": {
            "code": "Neo",
            "display": "Neo"
        },
        "subject": "您有1筆公文待簽核",
        "url": "https://www.hpc.tw",
        "sharedData": {},
        "period": {
            "start": new Date("1990-06-15T00:00"),
            "end": new Date("2229-12-31T23:59")
        },
        "type": {
            "code": "60",
            "display": "待辦工作"
        },
        "execTime": new Date("2023-09-27T14:00"),
        "execStatus": {
            "code": "60",
            "display": "已讀/已完成"
        },
        "updatedBy": {
            "code": "alphaTeam",
            "display": "alphaTeam"
        },
        "updatedAt": new Date("1990-06-15T00:00")
    },
    {
        "_id": "64f1968af80caa4450a1d21a",
        "appId": "001-app_id",
        "userCode": {
            "code": "Tommy",
            "display": "Tommy"
        },
        "subject": "員工健康檢查通知",
        "url": "https://www.hpc.tw",
        "sharedData": {},
        "period": {
            "start": new Date("1990-06-15T00:00"),
            "end": new Date("2229-12-31T23:59")
        },
        "type": {
            "code": "10",
            "display": "一般消息"
        },
        "execTime": new Date("2023-09-27T14:00"),
        "execStatus": {
            "code": "60",
            "display": "已讀/已完成"
        },
        "updatedBy": {
            "code": "alphaTeam",
            "display": "alphaTeam"
        },
        "updatedAt": new Date("1990-06-15T00:00")
    },
    {
        "_id": "64f1968af80caa4450a1d21b",
        "appId": "002-app_id",
        "userCode": {
            "code": "Tommy",
            "display": "Tommy"
        },
        "subject": "您有2筆公文待簽核",
        "url": "https://www.hpc.tw",
        "sharedData": {},
        "period": {
            "start": new Date("1990-06-15T00:00"),
            "end": new Date("2229-12-31T23:59")
        },
        "type": {
            "code": "60",
            "display": "待辦工作"
        },
        "execTime": new Date("2023-09-27T14:00"),
        "execStatus": {
            "code": "60",
            "display": "已讀/已完成"
        },
        "updatedBy": {
            "code": "alphaTeam",
            "display": "alphaTeam"
        },
        "updatedAt": new Date("1990-06-15T00:00")
    }
];
//# sourceMappingURL=data:application/json;base64,